#ifndef TOKENIZER_H
#define TOKENIZER_H

#include <iosfwd>
#include <string>
#include <map>


class  LIB_EXPORT ConsumeState;

class LIB_EXPORT Toker
{
public:
	Toker();
	~Toker();
	bool attach(std::istream* pIn);
	std::string* getTok();
	bool canRead();

	
private:
	ConsumeState* pConsumer;
	std::map<std::string, int *> tokens;
	
	//configurations
	bool storeComments = true;
};

#endif

if (token[2] == "\"" && inDoubleQuotes == false)
{
	inDoubleQuotes = true;
}else if(token[2] == "'" && inSingleQuotes == false)
{
	inSingleQuotes = true;
}

std::vector<std::string> ConsumeState::singleTokens = { "\"", "'", "<" , ">", "[", "]", "!", "_" };
std::vector<std::string> ConsumeState::doubleTokens = { "<<", ">>", "::" };